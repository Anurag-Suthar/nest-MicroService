version: "3.8"

services:
  reservations:
    build:
      context: .
      dockerfile: ./apps/reservations/Dockerfile
      target: development
    # command: pnpm run start:debug reservations
    command: pnpm run start:dev reservations
    ports:
      - 3000:3000
      # - '9229:9229' for debuging 
    environment:
      - NODE_ENV=development
    env_file:
      - ./apps/reservations/.env
    # volumes:
    #   - .:/usr/src/app
  auth:
    build: 
      context: .
      dockerfile: ./apps/auth/Dockerfile
      target: development
    ports:
      - 3001:3001
    environment:
      - NODE_ENV=development
    env_file:
      - ./apps/auth/.env
    # volumes:
    #   - .:/usr/src/app
    command: pnpm run start:dev auth
  payments:
    build: 
      context: .
      dockerfile: ./apps/payments/Dockerfile
      target: development

    environment:
      - NODE_ENV=development
    env_file:
      - ./apps/payments/.env
    # volumes:
    #   - .:/usr/src/app
    command: pnpm run start:dev payments
  notifications:
    build: 
      context: .
      dockerfile: ./apps/notifications/Dockerfile
      target: development
    environment:
      - NODE_ENV=development
    env_file:
      - ./apps/notifications/.env
    # volumes:
    #   - .:/usr/src/app
    command: pnpm run start:dev notifications
#   mongo:
#     image: mongo
#     restart: always
#     ports:
#       - "27017:27017"  # Expose MongoDB to your local machine
#     volumes:
#       - mongo-data:/data/db  # Persist MongoDB data
# volumes:
#   mongo-data:
  mysql:
    image: mysql
    env_file:
      - .env
    ports:
      - '3306:3306'
  rabbitmq:
    image: rabbitmq
    ports:
      - 5672:5672
